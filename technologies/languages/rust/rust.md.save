- rustup
- rustc: compiler
- rustfmt: formatter

marcos
ahead-of-time compiled
cargo

- crates
  - crates.io: registry
- trait
- prelude: standard libraries

## Overview
- High-level ergonomics vs low-level control

## Common

### Variable

- immutable by default
- contrants: always immutable

### Data Types

- Strong & Static types system

- Scalar
  - Integer
    - Overflow
  - Float-point
    - IEEE-754
  - Boolean
  - Character
    - use single quote '', string use double quoute ""
    - 4 bytes
- Compound
  - Tuple
    - fixed-length
  - Array
    - fixed-length
    - same tyoes

### Functions

- Function signatures
- Statement & Expression
    - exepression is part of statement
    - experession inclues call function, call marco, or in block
    - experession not have ;, statement is have ; at the end line

### Control FLow

- If-else
- Loop
    - break counter * 2;
    - loop label, break;
    - while

## Ownership

- Control memory:
  - garbage collector
  - the programmer must explicitly allocate and free the memory
  - Rust: ownership
- Stack
  - fixed size
- Heap
  - pointer
  - allocate
- ownership
  - Heap: String 
  - `drop` function - Resource Acquisition Is Initialization (RAII) in C++
  - borrow
  - dangling references: reference to nothing
  - slice
    - slice is kind of reference

## Structure

- struct vs reference
- struct vs trait
- method
- :: associated function
- `dbg!` macro

## Enums

- Option<T>: Rust not have null
- None
- Some <T>
- match
- if let / else

## Packages

- `pub`
- `use`

## Error Handling

- panic!: unrecoverable
- Result<T, E>: recoverable

- unwrap()
- expect()
- ? operator

## Generic

- Generic types
- Trait: Share behavior
- Lifetime
  - annotation
  - 
## Test
